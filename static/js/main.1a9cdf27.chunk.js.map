{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_FIELD_ALPHABETICALLY","SORT_FIELD_BY_LENGTH","App","useState","sortField","setSortField","isReversed","setIsReversed","readyGoods","goods","reverse","preparedGoods","sort","good1","good2","localeCompare","length","getPreparedGoods","isResetNeeded","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAMaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAA4B,iBAC5BC,EAAuB,YA2BtB,IAAMC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACMC,EA5BR,SAA0BC,EAA1B,GAA0D,IAAvBL,EAAsB,EAAtBA,UAAWM,EAAW,EAAXA,QACtCC,EAAa,YAAOF,GAqB1B,OAnBIL,GACFO,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQV,GACN,KAAKJ,EACH,OAAOa,EAAME,cAAcD,GAE7B,KAAKb,EACH,OAAOY,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,MAKXN,GACFC,EAAcD,UAGTC,EAOLM,CAAiBlB,EAAiB,CAAEK,YAAWM,QAASJ,IAYpDY,EAAiBd,GAAaE,EAEpC,OACE,sBAAKa,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UACEE,IACE,SACA,UACA,CAAE,WAAYjB,IAAcJ,IAEhCsB,QAtBN,kBAAMjB,EAAaL,IAcf,iCAaA,wBACEoB,KAAK,SACLD,UACEE,IACE,SACA,aACA,CAAE,WAAYjB,IAAcH,IAEhCqB,QAjCmB,kBAAMjB,EAAaJ,IAyBxC,4BAaA,wBACEmB,KAAK,SACLD,UACEE,IACE,SACA,aACA,CAAE,YAA2B,IAAff,IAElBgB,QA7Cc,kBAAMf,GAAeD,IAqCrC,qBAaCY,GACC,wBACEE,KAAK,SACLD,UAAU,4BACVG,QArDU,WAClBjB,EAAa,IACbE,GAAc,IAgDR,sBAWJ,6BACGC,EAAWe,KAAI,SAAAC,GAAI,OAClB,oBAAI,UAAQ,OAAZ,SACGA,aCvHbC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.1a9cdf27.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\n\nimport { useState } from 'react';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_FIELD_ALPHABETICALLY = 'alphabetically';\nconst SORT_FIELD_BY_LENGTH = 'by length';\n\nfunction getPreparedGoods(goods, { sortField, reverse }) {\n  const preparedGoods = [...goods];\n\n  if (sortField) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SORT_FIELD_ALPHABETICALLY:\n          return good1.localeCompare(good2);\n\n        case SORT_FIELD_BY_LENGTH:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (reverse) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [isReversed, setIsReversed] = useState(false);\n  const readyGoods\n  = getPreparedGoods(goodsFromServer, { sortField, reverse: isReversed });\n\n  const handleSortAlphabetically\n  = () => setSortField(SORT_FIELD_ALPHABETICALLY);\n\n  const handleSortByLength = () => setSortField(SORT_FIELD_BY_LENGTH);\n  const handleReverse = () => setIsReversed(!isReversed);\n  const handleReset = () => {\n    setSortField('');\n    setIsReversed(false);\n  };\n\n  const isResetNeeded = (sortField || isReversed);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={\n            cn(\n              'button',\n              'is-info',\n              { 'is-light': sortField !== SORT_FIELD_ALPHABETICALLY },\n            )}\n          onClick={handleSortAlphabetically}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            cn(\n              'button',\n              'is-success',\n              { 'is-light': sortField !== SORT_FIELD_BY_LENGTH },\n            )}\n          onClick={handleSortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            cn(\n              'button',\n              'is-warning',\n              { 'is-light': isReversed === false },\n            )}\n          onClick={handleReverse}\n        >\n          Reverse\n        </button>\n\n        {isResetNeeded && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={handleReset}\n          >\n            Reset\n          </button>\n        )\n}\n      </div>\n\n      <ul>\n        {readyGoods.map(good => (\n          <li data-cy=\"Good\">\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}