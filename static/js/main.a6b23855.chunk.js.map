{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_FIELD_ALPHABETICALLY","SORT_FIELD_BY_LENGTH","App","useState","sortField","setSortField","reverse","setReverse","readyGoods","goods","preparedGoods","sort","good1","good2","localeCompare","length","getPreparedGoods","className","type","cn","onClick","map","good","index","ReactDOM","render","document","getElementById"],"mappings":"iPAMaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAA4B,iBAC5BC,EAAuB,YA4BtB,IAAMC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACMC,EA5BR,SAA0BC,EAA1B,GAA0D,IAAvBL,EAAsB,EAAtBA,UAAWE,EAAW,EAAXA,QACtCI,EAAa,YAAOD,GAqB1B,OAnBIL,GACFM,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQT,GACN,KAAKJ,EACH,OAAOY,EAAME,cAAcD,GAE7B,KAAKZ,EACH,OAAOW,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,MAKXT,GACFI,EAAcJ,UAGTI,EAMYM,CAAiBjB,EAAiB,CAAEK,YAAWE,YAUlE,OACE,sBAAKW,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UACEE,IAAG,SAAU,UACX,CAAE,WAAYf,IAAcJ,IAChCoB,QAhBqB,kBAAMf,EAAaL,IAW1C,iCAUA,wBACEkB,KAAK,SACLD,UACEE,IAAG,SAAU,aACX,CAAE,WAAYf,IAAcH,IAChCmB,QAzBe,kBAAMf,EAAaJ,IAoBpC,4BAUA,wBACEiB,KAAK,SACLD,UACEE,IAAG,SAAU,aACX,CAAE,WAnEF,QAmEcb,IAClBc,QAlCU,kBAAMb,GAAYD,IA6B9B,sBAUEF,GAAaE,IACf,wBACEY,KAAK,SACLD,UAAU,4BACVG,QA1CQ,WACdf,EAAa,IACbE,GAAW,IAqCP,sBAWF,6BACGC,EAAWa,KAAI,SAACC,EAAMC,GAAP,OACd,oBAAI,UAAQ,OAAZ,SACGD,aC1GbE,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a6b23855.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\n\nimport { useState } from 'react';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_FIELD_ALPHABETICALLY = 'alphabetically';\nconst SORT_FIELD_BY_LENGTH = 'by length';\nconst FALSE = false;\n\nfunction getPreparedGoods(goods, { sortField, reverse }) {\n  const preparedGoods = [...goods];\n\n  if (sortField) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SORT_FIELD_ALPHABETICALLY:\n          return good1.localeCompare(good2);\n\n        case SORT_FIELD_BY_LENGTH:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (reverse) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [reverse, setReverse] = useState(false);\n  const readyGoods = getPreparedGoods(goodsFromServer, { sortField, reverse });\n\n  const doSortAlphabetically = () => setSortField(SORT_FIELD_ALPHABETICALLY);\n  const doSortByLength = () => setSortField(SORT_FIELD_BY_LENGTH);\n  const doReverse = () => setReverse(!reverse);\n  const doReset = () => {\n    setSortField('');\n    setReverse(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={\n            cn('button', 'is-info',\n              { 'is-light': sortField !== SORT_FIELD_ALPHABETICALLY })}\n          onClick={doSortAlphabetically}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            cn('button', 'is-success',\n              { 'is-light': sortField !== SORT_FIELD_BY_LENGTH })}\n          onClick={doSortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            cn('button', 'is-warning',\n              { 'is-light': reverse === FALSE })}\n          onClick={doReverse}\n        >\n          Reverse\n        </button>\n\n        {(sortField || reverse) && (\n        <button\n          type=\"button\"\n          className=\"button is-danger is-light\"\n          onClick={doReset}\n        >\n          Reset\n        </button>\n        )\n}\n      </div>\n\n      <ul>\n        {readyGoods.map((good, index) => (\n          <li data-cy=\"Good\">\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}